// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 32-bit"
// VERSION "Version 13.0.0 Build 156 04/24/2013 SJ Web Edition"

// DATE "08/05/2018 11:09:56"

// 
// Device: Altera EP4CGX15BF14C8 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module PRUEBA (
	Q1,
	MODO,
	HORARIO,
	CLK,
	nRST,
	Q0,
	Q2,
	ERROR,
	POS);
output 	Q1;
input 	MODO;
input 	HORARIO;
input 	CLK;
input 	nRST;
output 	Q0;
output 	Q2;
output 	ERROR;
output 	[2:0] POS;

// Design Ports Information
// Q1	=>  Location: PIN_A11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Q0	=>  Location: PIN_L5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Q2	=>  Location: PIN_N9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ERROR	=>  Location: PIN_B13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// POS[2]	=>  Location: PIN_N8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// POS[1]	=>  Location: PIN_A12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// POS[0]	=>  Location: PIN_L7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// HORARIO	=>  Location: PIN_K9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// MODO	=>  Location: PIN_K8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CLK	=>  Location: PIN_J7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// nRST	=>  Location: PIN_J6,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Q1~output_o ;
wire \Q0~output_o ;
wire \Q2~output_o ;
wire \ERROR~output_o ;
wire \POS[2]~output_o ;
wire \POS[1]~output_o ;
wire \POS[0]~output_o ;
wire \CLK~input_o ;
wire \CLK~inputclkctrl_outclk ;
wire \HORARIO~input_o ;
wire \MODO~input_o ;
wire \inst|inst3~0_combout ;
wire \nRST~input_o ;
wire \nRST~inputclkctrl_outclk ;
wire \inst|inst3~q ;
wire \inst|inst2~0_combout ;
wire \inst|inst2~q ;
wire \inst|inst1~0_combout ;
wire \inst|inst1~1_combout ;
wire \inst|inst1~q ;


// Location: IOOBUF_X20_Y31_N2
cycloneiv_io_obuf \Q1~output (
	.i(\inst|inst2~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q1~output_o ),
	.obar());
// synopsys translate_off
defparam \Q1~output .bus_hold = "false";
defparam \Q1~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X14_Y0_N9
cycloneiv_io_obuf \Q0~output (
	.i(\inst|inst3~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q0~output_o ),
	.obar());
// synopsys translate_off
defparam \Q0~output .bus_hold = "false";
defparam \Q0~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X20_Y0_N2
cycloneiv_io_obuf \Q2~output (
	.i(\inst|inst1~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q2~output_o ),
	.obar());
// synopsys translate_off
defparam \Q2~output .bus_hold = "false";
defparam \Q2~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X26_Y31_N9
cycloneiv_io_obuf \ERROR~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ERROR~output_o ),
	.obar());
// synopsys translate_off
defparam \ERROR~output .bus_hold = "false";
defparam \ERROR~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X20_Y0_N9
cycloneiv_io_obuf \POS[2]~output (
	.i(\inst|inst1~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\POS[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \POS[2]~output .bus_hold = "false";
defparam \POS[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X20_Y31_N9
cycloneiv_io_obuf \POS[1]~output (
	.i(\inst|inst2~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\POS[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \POS[1]~output .bus_hold = "false";
defparam \POS[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X14_Y0_N2
cycloneiv_io_obuf \POS[0]~output (
	.i(\inst|inst3~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\POS[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \POS[0]~output .bus_hold = "false";
defparam \POS[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X16_Y0_N15
cycloneiv_io_ibuf \CLK~input (
	.i(CLK),
	.ibar(gnd),
	.o(\CLK~input_o ));
// synopsys translate_off
defparam \CLK~input .bus_hold = "false";
defparam \CLK~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G17
cycloneiv_clkctrl \CLK~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\CLK~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\CLK~inputclkctrl_outclk ));
// synopsys translate_off
defparam \CLK~inputclkctrl .clock_type = "global clock";
defparam \CLK~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X22_Y0_N1
cycloneiv_io_ibuf \HORARIO~input (
	.i(HORARIO),
	.ibar(gnd),
	.o(\HORARIO~input_o ));
// synopsys translate_off
defparam \HORARIO~input .bus_hold = "false";
defparam \HORARIO~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X22_Y0_N8
cycloneiv_io_ibuf \MODO~input (
	.i(MODO),
	.ibar(gnd),
	.o(\MODO~input_o ));
// synopsys translate_off
defparam \MODO~input .bus_hold = "false";
defparam \MODO~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X21_Y1_N30
cycloneiv_lcell_comb \inst|inst3~0 (
// Equation(s):
// \inst|inst3~0_combout  = \inst|inst3~q  $ (\MODO~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\inst|inst3~q ),
	.datad(\MODO~input_o ),
	.cin(gnd),
	.combout(\inst|inst3~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst3~0 .lut_mask = 16'h0FF0;
defparam \inst|inst3~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X16_Y0_N22
cycloneiv_io_ibuf \nRST~input (
	.i(nRST),
	.ibar(gnd),
	.o(\nRST~input_o ));
// synopsys translate_off
defparam \nRST~input .bus_hold = "false";
defparam \nRST~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G19
cycloneiv_clkctrl \nRST~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\nRST~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\nRST~inputclkctrl_outclk ));
// synopsys translate_off
defparam \nRST~inputclkctrl .clock_type = "global clock";
defparam \nRST~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X21_Y1_N31
dffeas \inst|inst3 (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\inst|inst3~0_combout ),
	.asdata(vcc),
	.clrn(\nRST~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst|inst3~q ),
	.prn(vcc));
// synopsys translate_off
defparam \inst|inst3 .is_wysiwyg = "true";
defparam \inst|inst3 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X21_Y1_N12
cycloneiv_lcell_comb \inst|inst2~0 (
// Equation(s):
// \inst|inst2~0_combout  = (\MODO~input_o  & (\HORARIO~input_o  $ (((\inst|inst2~q ) # (!\inst|inst3~q ))))) # (!\MODO~input_o  & (((!\inst|inst2~q ))))

	.dataa(\MODO~input_o ),
	.datab(\HORARIO~input_o ),
	.datac(\inst|inst2~q ),
	.datad(\inst|inst3~q ),
	.cin(gnd),
	.combout(\inst|inst2~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst2~0 .lut_mask = 16'h2D27;
defparam \inst|inst2~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X21_Y1_N13
dffeas \inst|inst2 (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\inst|inst2~0_combout ),
	.asdata(vcc),
	.clrn(\nRST~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst|inst2~q ),
	.prn(vcc));
// synopsys translate_off
defparam \inst|inst2 .is_wysiwyg = "true";
defparam \inst|inst2 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X21_Y1_N18
cycloneiv_lcell_comb \inst|inst1~0 (
// Equation(s):
// \inst|inst1~0_combout  = (\HORARIO~input_o  & (((\MODO~input_o  & !\inst|inst3~q )) # (!\inst|inst2~q ))) # (!\HORARIO~input_o  & ((\inst|inst2~q ) # ((\MODO~input_o  & \inst|inst3~q ))))

	.dataa(\MODO~input_o ),
	.datab(\HORARIO~input_o ),
	.datac(\inst|inst3~q ),
	.datad(\inst|inst2~q ),
	.cin(gnd),
	.combout(\inst|inst1~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst1~0 .lut_mask = 16'h3BEC;
defparam \inst|inst1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X21_Y1_N28
cycloneiv_lcell_comb \inst|inst1~1 (
// Equation(s):
// \inst|inst1~1_combout  = \inst|inst1~q  $ (!\inst|inst1~0_combout )

	.dataa(gnd),
	.datab(gnd),
	.datac(\inst|inst1~q ),
	.datad(\inst|inst1~0_combout ),
	.cin(gnd),
	.combout(\inst|inst1~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst1~1 .lut_mask = 16'hF00F;
defparam \inst|inst1~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X21_Y1_N29
dffeas \inst|inst1 (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\inst|inst1~1_combout ),
	.asdata(vcc),
	.clrn(\nRST~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst|inst1~q ),
	.prn(vcc));
// synopsys translate_off
defparam \inst|inst1 .is_wysiwyg = "true";
defparam \inst|inst1 .power_up = "low";
// synopsys translate_on

assign Q1 = \Q1~output_o ;

assign Q0 = \Q0~output_o ;

assign Q2 = \Q2~output_o ;

assign ERROR = \ERROR~output_o ;

assign POS[2] = \POS[2]~output_o ;

assign POS[1] = \POS[1]~output_o ;

assign POS[0] = \POS[0]~output_o ;

endmodule
